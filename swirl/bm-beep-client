#!/usr/bin/env lua

require"argp"
require"quote"
require"socket"
require"sockext"
require"swirl"

-- Setup

USAGE = "usage: "..arg[0].." port=INT [host=STR]"

arg.host     = "localhost"
arg.time     = 5
arg.size     = 5000
arg.presend  = 2

argp.expand(arg)

if arg.verbose then
  trace = print
else
  trace = function () end
end

arg.port = assert(tonumber(arg.port), "no port\n"..USAGE)

loop = sockext.loop

q = quote.quote

NULL = "http://example.com/beep/null"

BUF = string.rep("x", arg.size)
TIME = 5 -- seconds

local xfersz = 0

-- Beep client:

beep = {}

beep.il = "I"

function beep.receive(client)
  local data, emsg = sockext.receive(client, "*f", swirl.BUFSZ)
  if data then
    trace("--- L > I:\n"..data.."\n---")
    beep.core:push(data)
  elseif emsg == "timeout" then
    -- ignore
  else
    print("receive on", client, "failed", emsg)
    os.exit(1)
  end
end

function beep.send(client)
  local data = beep.core:pull()
  if data then
    trace("--- I > L:\n"..data.."\n---")
    local sz = assert(client:send(data))
    beep.core:pulled(sz)
  end
end

function beep.on_connected(client)
  trace(".. on_connected")
  beep.chno = beep.core:start(NULL)
end

function beep.on_started(ch0)
  trace(".. on_started")
  t0 = os.time()

  -- keep outgoing queue full
  for _=1,arg.presend do
    assert(beep.core:send_msg(beep.chno, BUF))
  end
end

function beep.on_rpy(frame)
  trace(".. on_rpy", frame:messageno(), frame:payload())

  xfersz = xfersz + assert(tonumber(frame:payload()))

  trace(".. xfersz = "..xfersz)

  t1 = os.time()

  if t1 - t0 > TIME then
    t = t1 - t0
    print("xsz", xfersz, "t", t, "rate", xfersz/1000/t, "kb/s")
    os.exit(0)
  end

  frame:destroy()

  assert(beep.core:send_msg(beep.chno, BUF))
end

function beep.on_pullable(core)
  loop.send(beep.client, beep.send)
end

beep.core = swirl.session(beep)
beep.client = assert(socket.connect(arg.host, arg.port))
beep.client:settimeout(0)
beep.client:setoption("tcp-nodelay", true)

loop.receive(beep.client, beep.receive)
loop.send(beep.client, beep.send)


-- Start loop

loop.start()

